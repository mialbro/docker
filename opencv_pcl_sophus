FROM ubuntu:20.04
MAINTAINER mdrobinson@wpi.edu

ARG USER_ID
ARG GROUP_ID

RUN addgroup --gid $GROUP_ID user
RUN adduser --disabled-password --gecos '' --uid $USER_ID --gid $GROUP_ID user
USER user

ENV OPENCV_VERSION 4.5.5
ENV EIGEN_VERSION 3.4.0
ENV DEBIAN_FRONTEND=noninteractive 

RUN apt install -y sudo
RUN apt-get update -y && apt-get upgrade -y

# Install pcl
RUN apt install -y libpcl-dev

# Install OpenCV dependencies
RUN apt install -y build-essential cmake git pkg-config libgtk-3-dev \
    libavcodec-dev libavformat-dev libswscale-dev libv4l-dev \
    libxvidcore-dev libx264-dev libjpeg-dev libpng-dev libtiff-dev \
    gfortran openexr libatlas-base-dev python3-dev python3-numpy \
    libtbb2 libtbb-dev libdc1394-22-dev libopenexr-dev \
    libgstreamer-plugins-base1.0-dev libgstreamer1.0-dev wget

# Download OpenCV
RUN mkdir /opencv_build && cd /opencv_build && \
    wget -O opencv.zip https://github.com/opencv/opencv/archive/$OPENCV_VERSION.zip && \
    unzip opencv.zip && \
    mv opencv-$OPENCV_VERSION opencv && \
    rm opencv.zip && \
    wget -O opencv_contrib.zip https://github.com/opencv/opencv_contrib/archive/$OPENCV_VERSION.zip && \
    unzip opencv_contrib.zip && \
    mv opencv_contrib-$OPENCV_VERSION opencv_contrib && \
    rm opencv_contrib.zip 

# Install OpenCV
RUN mkdir -p /opencv_build/opencv/build && cd /opencv_build/opencv/build && \
    cmake -D CMAKE_BUILD_TYPE=RELEASE \
    -D OPENCV_EXTRA_MODULES_PATH=/opencv_build/opencv_contrib/modules \
    -D CMAKE_INSTALL_PREFIX=/usr/local \
    -D INSTALL_C_EXAMPLES=ON \
    -D INSTALL_PYTHON_EXAMPLES=ON \
    -D OPENCV_GENERATE_PKGCONFIG=ON \
    -D OPENCV_EXTRA_MODULES_PATH=/opencv_build/opencv_contrib/modules \
    -D BUILD_EXAMPLES=ON ..

RUN cd /opencv_build/opencv/build && make -j $(nproc) && make install

# Install Eigen
RUN mkdir /eigen_build && cd /eigen_build && \
    wget -O eigen.zip https://gitlab.com/libeigen/eigen/-/archive/$EIGEN_VERSION/eigen-$EIGEN_VERSION.zip && \
    unzip eigen.zip && \
    cd eigen-$EIGEN_VERSION && \
    mkdir build && cd build && \
    cmake .. && \
    make -j $(nproc) install

# install sophus
RUN mkdir /sophus_build && cd /sophus_build && \
    git clone https://github.com/strasdat/Sophus && \
    cd Sophus && \
    mkdir build && cd build && \
    cmake .. && \
    make -j $(nproc) && \
    make install -j $(nproc)




WORKDIR /slambook
